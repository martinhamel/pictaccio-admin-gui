{"version":3,"file":"js/src_utils_filter_functions_string_filter_function_ts-src_views_private_activities_companions_-46f432.js","mappings":"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","sources":["webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogProductTheme.vue","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogProductTheme.vue?9279","webpack://@pictaccio/admin-gui/./src/utils/filter_functions/string_filter_function.ts","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogProductTheme.vue?dd6b","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogProductTheme.vue?c0fa","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogProductTheme.vue?63bd","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/data_table_columns/product_themes_columns.ts"],"sourcesContent":["<style lang=\"scss\" scoped>\n</style>\n<template>\n    <crud-dialog ref=\"crud-dialog\"\n                 permission=\"product\"\n                 :allowArchiveDelete=\"archiveFeature\"\n                 @close=\"dialogClose\"\n                 @confirm=\"confirmClick\"\n                 @delete=\"deleteClick\">\n        <template v-for=\"field in columns.headers.filter(header => !header['tableOnly'])\"\n                  :key=\"field\"\n                  #[field.name]>\n            <slot :name=\"field.name\"></slot>\n        </template>\n    </crud-dialog>\n</template>\n<script lang=\"ts\">\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nimport { DataSource } from '@pictaccio/admin-gui/core/types/data_source';\nimport { DataSourceEventListeners } from '@pictaccio/admin-gui/core/types/data_source_event_listeners';\nimport { GenericDataSource } from '@pictaccio/admin-gui/datasources/generic_data_source';\nimport { environment } from '@pictaccio/admin-gui/environment';\nimport { DbProductThemeSet } from '@pictaccio/admin-gui/models/db_product_theme_set';\nimport { globalPrompt } from '@pictaccio/admin-gui/utils/global_prompt';\nimport { globalToast } from '@pictaccio/admin-gui/utils/global_toast';\nimport ActivityCrudDialog\n    from '@pictaccio/admin-gui/views/private/activities/companions/crud_dialogs/activity_crud_dialog';\nimport CrudDialog from '@pictaccio/admin-gui/views/private/activities/companions/CrudDialog.vue';\nimport {\n    PRODUCT_THEMES_COLUMNS\n} from '@pictaccio/admin-gui/views/private/activities/companions/data_table_columns/product_themes_columns';\nimport DataTable from '@pictaccio/admin-gui/views/private/activities/companions/DataTable.vue';\nimport { LocalizedString } from '@pictaccio/shared/types/localized_string';\nimport { Component } from 'vue-facing-decorator';\n\n@Component({\n    name: 'Crud dialog product theme',\n    components: {\n        FontAwesomeIcon,\n        CrudDialog\n    },\n    emits: [\n        'update'\n    ],\n    expose: [\n        'deleteClick',\n        'getFields',\n        'openDialog',\n        'refreshField',\n        'updateCrud'\n    ]\n})\nexport default class CrudDialogProductTheme extends ActivityCrudDialog<DbProductThemeSet> {\n    private columns = PRODUCT_THEMES_COLUMNS;\n    private crudDialog: CrudDialog<DbProductThemeSet>;\n\n    // Feature flags\n    private archiveFeature = environment.features.archiveDeleteProductTheme;\n\n    public async deleteClick(id?: number, row?: DbProductThemeSet): Promise<void> {\n        if (!this.archiveFeature) {\n            return;\n        }\n\n        if (this.$validateCapability('product:delete') &&\n            await globalPrompt({\n                buttonType: 'yes-no',\n                icon: ['', ''],\n                message: this.$t('generic.prompt.destructive', {\n                    item: row.internal_name\n                }),\n                title: `${this.$t('generic.ui.delete')} ${this.$t('activities.productThemes.single')}`\n            }) === 'yes') {\n            try {\n                const { affected } = await this.$store.dispatch('ProductThemes/delete', {\n                    filters: [[{\n                        column: 'id',\n                        operand: (id ?? this.editId).toString(),\n                        operator: '=='\n                    }]]\n                });\n\n                if (affected === 1) {\n                    await this.$store.dispatch('ProductThemes/invalidateRange', {\n                        start: this.editId,\n                        end: null\n                    });\n                    await (this.$refs['product-themes-table'] as DataTable).refresh();\n                    await this.$store.dispatch('ProductThemesReader/makeDirty');\n                    this.dialogClose();\n                } else {\n                    globalToast(this.$t('ERROR_DELETING'), 'error');\n                }\n\n                this.$emit('update');\n            } catch (error) {\n                globalToast(this.$t('messages.deleteError'), 'error');\n            }\n        }\n    }\n\n    public getFields(): any {\n        return this.crudDialog.getFields();\n    }\n\n    public openDialog(rowId?: number, row?: DbProductThemeSet): void {\n        this.crudDialogStatus = rowId ? 'update' : 'create';\n        this.editId = rowId;\n        this.rowSelected = row;\n        this.crudDialog.setCrudDialogStatus(this.crudDialogStatus);\n        this.crudDialog.openDialog();\n        this.$nextTick(() => {\n            this.updateCrud(rowId, row);\n        });\n    }\n\n    public refreshField(fieldRef: string, dataSource: DataSource<DbProductThemeSet, any, any, any>) {\n        (this.$refs['crud-dialog'] as CrudDialog<DbProductThemeSet>).refreshField(fieldRef, dataSource);\n    }\n\n    public async updateCrud(rowId?: number, row?: DbProductThemeSet): Promise<void> {\n        const options = [{\n            id: 'required',\n            value: true\n        }];\n        const internalNameOptions = [\n            {\n                id: 'eventListeners',\n                value: {\n                    blur: event => this.internalNameBlur(event)\n                }\n            }, ...options\n        ];\n\n        this.crudDialog.setRowSelected(row ?? null);\n        this.crudDialog.update({\n            internal_name: GenericDataSource.from<\n                DbProductThemeSet,\n                string,\n                string,\n                boolean | DataSourceEventListeners\n            >(rowId ? row['internal_name'] : null, 'internal_name', internalNameOptions),\n            themes: GenericDataSource.from<\n                DbProductThemeSet,\n                { [key: string]: LocalizedString },\n                string,\n                boolean\n            >(rowId ? row['themes'] : null, 'themes', options)\n        });\n    }\n\n    /* LIFECYCLE */\n    public async mounted(): Promise<void> {\n        super.mounted('ProductThemes');\n        this.crudDialog = (this.$refs['crud-dialog'] as CrudDialog<DbProductThemeSet>);\n        this.crudDialog.setActivity('products');\n        this.crudDialog.setColumns(this.columns);\n    }\n\n    /* EVENT HANDLER */\n    private async confirmClick(): Promise<void> {\n        const form = this.crudDialog;\n        const formValues = form.getFields();\n        const initialArray = Object.entries(formValues)\n            .filter(([k, _]) => k.startsWith('themes_'));\n        const themes = {};\n\n        for (const [key, value] of initialArray) {\n            const [_, index, lang] = key.split('_');\n\n            if (!themes[index]) {\n                themes[index] = {};\n            }\n\n            themes[index][lang] = value;\n        }\n\n        const values: DbProductThemeSet = {\n            id: this.editId,\n            internal_name: formValues['internal_name'],\n            themes: themes,\n            scrubFlag: false\n        };\n\n        if (await this.internalNameValidation(values.internal_name)) {\n            return;\n        }\n\n        let result;\n\n        if (this.crudDialogStatus === 'create') {\n            try {\n                result = await this.$store.dispatch('ProductThemes/add', { item: values });\n\n                if (result.createdId !== null) {\n                    this.dialogClose();\n                }\n            } catch (error) {\n                globalToast(this.$t('messages.createError'), 'error');\n            }\n        } else {\n            try {\n                if (environment.features.scrubProducts) {\n                    values.scrubFlag = await globalPrompt({\n                        buttonType: 'yes-no',\n                        icon: ['', ''],\n                        message: this.$t('activities.productThemes.prompt.update'),\n                        title: `${this.$t('generic.ui.update')}`\n                    }) === 'yes';\n                } else {\n                    values.scrubFlag = false;\n                }\n\n                result = await this.$store.dispatch('ProductThemes/update', {\n                    filters: [[{\n                        column: 'id',\n                        operator: '==',\n                        operand: this.editId\n                    }]],\n                    values\n                });\n\n                await this.$store.dispatch('CrudOverlay/removeDirty', { force: true });\n                this.dialogClose();\n            } catch (error) {\n                globalToast(this.$t('messages.saveError'), 'error');\n            }\n        }\n\n        await this.$store.dispatch('ProductThemesReader/productThemesRead', true);\n        this.$emit('update', { id: this.editId ?? result?.createdId });\n    }\n\n    private dialogClose(): void {\n        this.crudDialog.closeDialog();\n        this.crudDialogStatus = 'read';\n        this.editId = null;\n        this.rowSelected = null;\n    }\n\n    /* PRIVATE */\n}\n</script>\n","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, renderList as _renderList, createSlots as _createSlots, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_crud_dialog = _resolveComponent(\"crud-dialog\")!\n\n  return (_openBlock(), _createBlock(_component_crud_dialog, {\n    ref: \"crud-dialog\",\n    permission: \"product\",\n    allowArchiveDelete: _ctx.archiveFeature,\n    onClose: _ctx.dialogClose,\n    onConfirm: _ctx.confirmClick,\n    onDelete: _ctx.deleteClick\n  }, _createSlots({ _: 2 /* DYNAMIC */ }, [\n    _renderList(_ctx.columns.headers.filter(header => !header['tableOnly']), (field) => {\n      return {\n        name: field.name,\n        fn: _withCtx(() => [\n          _renderSlot(_ctx.$slots, field.name)\n        ])\n      }\n    })\n  ]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\"allowArchiveDelete\", \"onClose\", \"onConfirm\", \"onDelete\"]))\n}","import { FilterType } from '@pictaccio/admin-gui/core/types/filters/filter_type';\nimport { FilterOption } from '@pictaccio/admin-gui/services/data_table_service';\nimport { FilterBuilder } from '@pictaccio/admin-gui/utils/filter_builder';\nimport { Operator } from '@pictaccio/shared/types/operator';\nimport { FilterFunction } from '@pictaccio/admin-gui/utils/filter_functions/filter_function';\n\n/**\n * Will check if the value in the column 'name' is identical to the provided value\n */\nexport class StringFilterFunction extends FilterFunction<string[]> {\n    /**\n     * Receive the value of the filter\n     * @param value is the value of the filter\n     * @param column is the column of the table\n     */\n    constructor(value: string | string[], type: FilterType, column = 'internal_name') {\n        if (!Array.isArray(value)) {\n            value = value.split(',');\n        }\n\n        super(value, type, column);\n    }\n\n    /**\n     * Will validate if a value can be handled\n     * @param value\n     */\n    public static canHandle(value: any): boolean {\n        return true;\n    }\n\n    public createRemoteFilters(builder: FilterBuilder): void {\n        const wildcard = ['contains', 'contains-not'].includes(this.type)\n            ? '%'\n            : '';\n\n        builder.addFilter({\n            column: this.column,\n            operator: ['is-not', 'contains-not'].includes(this.type)\n                ? '~~ NOT IN' as Operator\n                : '~~ IN' as Operator,\n            operand: [this.value.map(i => `${wildcard}${i.trim()}${wildcard}`)]\n        });\n    }\n\n    /**\n     * Will check the if the value of the column contain to the value of the filter\n     * @param value is the value of the column in the table\n     */\n    public filter(value: any): boolean {\n        return this.value.some(v => value.toLowerCase().includes(v.toLowerCase()));\n    }\n}\n","import { render } from \"./CrudDialogProductTheme.vue?vue&type=template&id=6e386489&ts=true\"\nimport script from \"./CrudDialogProductTheme.vue?vue&type=script&lang=ts\"\nexport * from \"./CrudDialogProductTheme.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__file',\"src/views/private/activities/companions/crud_dialogs/CrudDialogProductTheme.vue\"]])\n/* hot reload */\nif (module.hot) {\n  __exports__.__hmrId = \"6e386489\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('6e386489', __exports__)) {\n    api.reload('6e386489', __exports__)\n  }\n  \n  module.hot.accept(\"./CrudDialogProductTheme.vue?vue&type=template&id=6e386489&ts=true\", () => {\n    api.rerender('6e386489', render)\n  })\n\n}\n\n\nexport default __exports__","export { default } from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[1]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CrudDialogProductTheme.vue?vue&type=script&lang=ts\"; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[1]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CrudDialogProductTheme.vue?vue&type=script&lang=ts\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[1]!../../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[4]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CrudDialogProductTheme.vue?vue&type=template&id=6e386489&ts=true\"","import { i18n } from '@pictaccio/admin-gui/i18n';\nimport { localesData } from '@pictaccio/admin-gui/utils/datatable_column_renderers/locales_data';\n\nexport const PRODUCT_THEMES_COLUMNS = {\n    headers: [\n        {\n            name: 'id',\n            componentName: 'Id',\n            locale: 'dataTable.headers.id',\n            size: '6rem',\n            tableOnly: true,\n            order: 0\n        },\n        {\n            name: 'internal_name',\n            componentName: 'TextGeneric',\n            help: 'internalNameHelp',\n            locale: 'dataTable.headers.internalName.productThemes',\n            size: 'minmax(10rem, 1fr)',\n            order: 1\n        },\n        {\n            name: 'themes',\n            componentName: 'TextLocalizedList',\n            help: 'themesHelp',\n            locale: 'dataTable.headers.themes',\n            size: 'minmax(10rem, 2fr)',\n            renderer: value => Object.values(value).map(i => `<div>${i[i18n.global.locale]}</div>`).join(''),\n            order: 3\n        }\n    ],\n    visibleHeaders: [\n        'id',\n        'internal_name',\n        'name_locale'\n    ],\n    rows: []\n}\n"],"names":["FontAwesomeIcon","GenericDataSource","environment","globalPrompt","globalToast","ActivityCrudDialog","CrudDialog","PRODUCT_THEMES_COLUMNS","Component","CrudDialogProductTheme","constructor","args","_defineProperty","features","archiveDeleteProductTheme","deleteClick","id","row","archiveFeature","$validateCapability","buttonType","icon","message","$t","item","internal_name","title","affected","$store","dispatch","filters","column","operand","editId","toString","operator","start","end","$refs","refresh","dialogClose","$emit","error","getFields","crudDialog","openDialog","rowId","crudDialogStatus","rowSelected","setCrudDialogStatus","$nextTick","updateCrud","refreshField","fieldRef","dataSource","options","value","internalNameOptions","blur","event","internalNameBlur","setRowSelected","update","from","themes","mounted","setActivity","setColumns","columns","confirmClick","form","formValues","initialArray","Object","entries","filter","k","_","startsWith","key","index","lang","split","values","scrubFlag","internalNameValidation","result","createdId","scrubProducts","force","closeDialog","__decorate","name","components","emits","expose","renderSlot","_renderSlot","resolveComponent","_resolveComponent","withCtx","_withCtx","renderList","_renderList","createSlots","_createSlots","openBlock","_openBlock","createBlock","_createBlock","render","_ctx","_cache","$props","$setup","$data","$options","_component_crud_dialog","ref","permission","allowArchiveDelete","onClose","onConfirm","onDelete","headers","header","field","fn","$slots","FilterFunction","StringFilterFunction","type","Array","isArray","canHandle","createRemoteFilters","builder","wildcard","includes","addFilter","map","i","trim","some","v","toLowerCase","i18n","componentName","locale","size","tableOnly","order","help","renderer","global","join","visibleHeaders","rows"],"sourceRoot":""}