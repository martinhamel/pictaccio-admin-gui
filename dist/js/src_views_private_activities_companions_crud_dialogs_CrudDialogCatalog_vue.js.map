{"version":3,"file":"js/src_views_private_activities_companions_crud_dialogs_CrudDialogCatalog_vue.js","mappings":"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","sources":["webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogCatalog.vue","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogCatalog.vue?9284","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogCatalog.vue?3d80","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogCatalog.vue?1541","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogCatalog.vue?69ba","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/data_table_columns/product_catalog_columns.ts"],"sourcesContent":["<style lang=\"scss\" scoped>\n</style>\n<template>\n    <crud-dialog ref=\"crud-dialog\"\n                 permission=\"product\"\n                 :allowArchiveDelete=\"archiveFeature\"\n                 @close=\"dialogClose\"\n                 @confirm=\"confirmClick\"\n                 @delete=\"deleteClick\">\n        <template v-for=\"field in columns.headers.filter(header => !header['tableOnly'])\"\n                  :key=\"field\"\n                  #[field.name]>\n            <slot :name=\"field.name\"></slot>\n        </template>\n    </crud-dialog>\n</template>\n<script lang=\"ts\">\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nimport { DataSource, DataSourceOption } from '@pictaccio/admin-gui/core/types/data_source';\nimport { DataSourceEventListeners } from '@pictaccio/admin-gui/core/types/data_source_event_listeners';\nimport { GenericDataSource } from '@pictaccio/admin-gui/datasources/generic_data_source';\nimport { environment } from '@pictaccio/admin-gui/environment';\nimport { DbProductCatalog } from '@pictaccio/admin-gui/models/db_product_catalog';\nimport ProductCatalogs from '@pictaccio/admin-gui/store/modules/product_catalogs';\nimport { globalPrompt } from '@pictaccio/admin-gui/utils/global_prompt';\nimport { globalToast } from '@pictaccio/admin-gui/utils/global_toast';\nimport ActivityCrudDialog\n    from '@pictaccio/admin-gui/views/private/activities/companions/crud_dialogs/activity_crud_dialog';\nimport CrudDialog from '@pictaccio/admin-gui/views/private/activities/companions/CrudDialog.vue';\nimport {\n    PRODUCT_CATALOG_COLUMNS\n} from '@pictaccio/admin-gui/views/private/activities/companions/data_table_columns/product_catalog_columns';\nimport { validateInternalNameCharacters } from '@pictaccio/shared/utils/internal_name_constraint';\nimport { Component } from 'vue-facing-decorator';\n\n@Component({\n    name: 'Product Categories',\n    components: {\n        FontAwesomeIcon,\n        CrudDialog\n    },\n    emits: [\n        'update'\n    ],\n    expose: [\n        'deleteClick',\n        'getFields',\n        'openDialog',\n        'refreshField',\n        'updateCrud'\n    ]\n})\nexport default class CrudDialogCatalog extends ActivityCrudDialog<ProductCatalogs> {\n    private columns = PRODUCT_CATALOG_COLUMNS;\n    private crudDialog: CrudDialog<DbProductCatalog>;\n    private originalRow: DbProductCatalog;\n\n    // Feature flags\n    private archiveFeature = environment.features.archiveDeleteProductCatalog;\n\n    public getFields(): any {\n        return this.crudDialog.getFields();\n    }\n\n    public openDialog(rowId?: number, row?: DbProductCatalog): void {\n        this.crudDialogStatus = rowId ? 'update' : 'create';\n        this.editId = rowId;\n        this.rowSelected = row;\n        this.originalRow = row;\n        this.crudDialog.setCrudDialogStatus(this.crudDialogStatus);\n        this.crudDialog.openDialog();\n        this.$nextTick(() => {\n            this.updateCrud(rowId, row);\n        });\n    }\n\n    public refreshField(fieldRef: string, dataSource: DataSource<DbProductCatalog, any, any, any>) {\n        (this.$refs['crud-dialog'] as CrudDialog<DbProductCatalog>).refreshField(fieldRef, dataSource);\n    }\n\n    public async updateCrud(rowId?: number, row?: DbProductCatalog): Promise<void> {\n        await this.$store.dispatch('ProductsReader/productsRead');\n        const options = [{\n            id: 'required',\n            value: true\n        }];\n        const internalNameOptions = [\n            {\n                id: 'eventListeners',\n                value: {\n                    blur: event => this.internalNameBlur(event)\n                }\n            }, ...options\n        ];\n        const products = this.$store.getters['ProductsReader/products']\n            .map(i => ({ id: i.id, value: i.value }));\n\n        this.crudDialog.setRowSelected(row);\n        this.crudDialog.update({\n            internal_name: GenericDataSource.from<\n                DbProductCatalog,\n                string,\n                string,\n                boolean | DataSourceEventListeners\n            >(rowId ? row['internal_name'] : null, 'internal_name', internalNameOptions),\n            products: GenericDataSource.from<\n                DbProductCatalog,\n                string[],\n                string,\n                DataSourceOption<string, string>\n            >(rowId ? row['products'].map(product => product.id.toString()) : null, 'products', products)\n        });\n    }\n\n    /* LIFECYCLE */\n    public async mounted(): Promise<void> {\n        super.mounted('ProductCatalogs');\n        this.crudDialog = (this.$refs['crud-dialog'] as CrudDialog<DbProductCatalog>);\n        this.crudDialog.setActivity('productCatalogs');\n        this.crudDialog.setColumns(this.columns);\n    }\n\n    /* EVENT HANDLER */\n    private async confirmClick(): Promise<void> {\n        const formValues = this.getFields();\n\n        if (!formValues['internal_name']) {\n            await globalPrompt({\n                buttonType: 'ok',\n                icon: ['', ''],\n                message: this.$t('activities.productCatalogs.prompts.missingValueMessage'),\n                title: this.$t('activities.productCatalogs.prompts.missingValueTitle')\n            });\n            return;\n        }\n        const nameLocale = Object.fromEntries(this.$store.getters['StoreConfig/languagesList'].map(i => [\n            i.locale,\n            formValues['internal_name']\n        ]));\n        const products = formValues['products']\n            .sort((a, b) => a.order - b.order)\n            .map(item => parseInt(item.optionId, 10));\n        const values: DbProductCatalog = {\n            name_locale: nameLocale,\n            internal_name: formValues['internal_name'],\n            products\n        };\n        if (!validateInternalNameCharacters(values.internal_name)) {\n            globalToast(this.$t('activities.all.internalNameUseWrongCharacters'), 'error');\n            return;\n        }\n\n        const internalNameExists = await this.$store.dispatch('ProductCatalogs/query', [[{\n            column: 'internal_name',\n            operator: '~~',\n            operand: values.internal_name\n        }]]);\n        if (!(!internalNameExists || internalNameExists.length === 0) &&\n                (values.internal_name !== this.originalRow.internal_name && this.crudDialogStatus === 'update')) {\n            globalToast(this.$t('activities.all.internalNameExists'), 'error');\n            return;\n        }\n\n        let result;\n\n        if (this.crudDialogStatus === 'create') {\n            try {\n                result = await this.$store.dispatch('ProductCatalogs/add', { item: values });\n\n                if (result.createdId !== null) {\n                    this.dialogClose();\n                }\n            } catch (error) {\n                globalToast(this.$t('messages.createError'), 'error');\n            }\n        } else {\n            try {\n                result = await this.$store.dispatch('ProductCatalogs/update', {\n                    filters: [[{\n                        column: 'id',\n                        operator: '==',\n                        operand: this.editId\n                    }]],\n                    values\n                });\n\n                await this.$store.dispatch('CrudOverlay/removeDirty', { force: true });\n                this.dialogClose();\n            } catch (error) {\n                globalToast(this.$t('messages.saveError'), 'error');\n            }\n        }\n\n        await this.$store.dispatch('ProductCatalogsReader/productCatalogsRead', true);\n        this.$emit('update', { id: this.editId ?? result?.createdId });\n    }\n\n    public async deleteClick(id?: number, row?: DbProductCatalog): Promise<void> {\n        if (!this.archiveFeature) {\n            return;\n        }\n\n        if (this.$validateCapability('product:delete') &&\n            await globalPrompt({\n                buttonType: 'yes-no',\n                icon: ['', ''],\n                message: this.$t('generic.prompt.destructive', {\n                    item: row.internal_name\n                }),\n                title: `${this.$t('generic.ui.delete')} ${this.$t('activities.productCatalogs.single')}`\n            }) === 'yes') {\n            try {\n                await this.$store.dispatch('ProductCatalogs/delete', {\n                    filters: [[{\n                        column: 'id',\n                        operand: (id ?? this.editId).toString(),\n                        operator: '=='\n                    }]]\n                });\n                this.$emit('update');\n            } catch (error) {\n                globalToast(this.$t('messages.deleteError'), 'error');\n            }\n        }\n    }\n\n    private dialogClose(): void {\n        this.crudDialog.closeDialog();\n        this.crudDialogStatus = 'read';\n        this.editId = null;\n        this.rowSelected = null;\n    }\n\n    /* PRIVATE */\n}\n</script>\n","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, renderList as _renderList, createSlots as _createSlots, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_crud_dialog = _resolveComponent(\"crud-dialog\")!\n\n  return (_openBlock(), _createBlock(_component_crud_dialog, {\n    ref: \"crud-dialog\",\n    permission: \"product\",\n    allowArchiveDelete: _ctx.archiveFeature,\n    onClose: _ctx.dialogClose,\n    onConfirm: _ctx.confirmClick,\n    onDelete: _ctx.deleteClick\n  }, _createSlots({ _: 2 /* DYNAMIC */ }, [\n    _renderList(_ctx.columns.headers.filter(header => !header['tableOnly']), (field) => {\n      return {\n        name: field.name,\n        fn: _withCtx(() => [\n          _renderSlot(_ctx.$slots, field.name)\n        ])\n      }\n    })\n  ]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\"allowArchiveDelete\", \"onClose\", \"onConfirm\", \"onDelete\"]))\n}","import { render } from \"./CrudDialogCatalog.vue?vue&type=template&id=20141afa&ts=true\"\nimport script from \"./CrudDialogCatalog.vue?vue&type=script&lang=ts\"\nexport * from \"./CrudDialogCatalog.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__file',\"src/views/private/activities/companions/crud_dialogs/CrudDialogCatalog.vue\"]])\n/* hot reload */\nif (module.hot) {\n  __exports__.__hmrId = \"20141afa\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('20141afa', __exports__)) {\n    api.reload('20141afa', __exports__)\n  }\n  \n  module.hot.accept(\"./CrudDialogCatalog.vue?vue&type=template&id=20141afa&ts=true\", () => {\n    api.rerender('20141afa', render)\n  })\n\n}\n\n\nexport default __exports__","export { default } from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[1]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CrudDialogCatalog.vue?vue&type=script&lang=ts\"; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[1]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CrudDialogCatalog.vue?vue&type=script&lang=ts\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[1]!../../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[4]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CrudDialogCatalog.vue?vue&type=template&id=20141afa&ts=true\"","export const PRODUCT_CATALOG_COLUMNS = {\n    headers: [\n        {\n            name: 'id',\n            componentName: 'Id',\n            locale: 'dataTable.headers.id',\n            size: '6rem',\n            tableOnly: true,\n            order: 0\n        },\n        {\n            name: 'internal_name',\n            componentName: 'TextGeneric',\n            help: 'internalNameHelp',\n            locale: 'dataTable.headers.internalName.catalogs',\n            size: 'minmax(14rem, 1fr)',\n            order: 1\n        },\n        {\n            name: 'products',\n            componentName: 'CrudListSelect',\n            locale: 'dataTable.headers.products',\n            help: 'productCatalogsProductHelp',\n            size: 'minmax(15rem, 2fr)',\n            renderer: (value) => {\n                if (!value || !Array.isArray(value)) {\n                    return '';\n                }\n\n                return value.map(product =>\n                    `<span>${product.internal_name}</span>`)\n                    ?.join(' ');\n            },\n            order: 3\n        }\n    ],\n    visibleHeaders: [\n        'id',\n        'internal_name',\n        'products'\n    ],\n    rows: []\n}\n"],"names":["FontAwesomeIcon","GenericDataSource","environment","globalPrompt","globalToast","ActivityCrudDialog","CrudDialog","PRODUCT_CATALOG_COLUMNS","validateInternalNameCharacters","Component","CrudDialogCatalog","constructor","args","_defineProperty","features","archiveDeleteProductCatalog","getFields","crudDialog","openDialog","rowId","row","crudDialogStatus","editId","rowSelected","originalRow","setCrudDialogStatus","$nextTick","updateCrud","refreshField","fieldRef","dataSource","$refs","$store","dispatch","options","id","value","internalNameOptions","blur","event","internalNameBlur","products","getters","map","i","setRowSelected","update","internal_name","from","product","toString","mounted","setActivity","setColumns","columns","confirmClick","formValues","buttonType","icon","message","$t","title","nameLocale","Object","fromEntries","locale","sort","a","b","order","item","parseInt","optionId","values","name_locale","internalNameExists","column","operator","operand","length","result","createdId","dialogClose","error","filters","force","$emit","deleteClick","archiveFeature","$validateCapability","closeDialog","__decorate","name","components","emits","expose","renderSlot","_renderSlot","resolveComponent","_resolveComponent","withCtx","_withCtx","renderList","_renderList","createSlots","_createSlots","openBlock","_openBlock","createBlock","_createBlock","render","_ctx","_cache","$props","$setup","$data","$options","_component_crud_dialog","ref","permission","allowArchiveDelete","onClose","onConfirm","onDelete","_","headers","filter","header","field","fn","$slots","componentName","size","tableOnly","help","renderer","Array","isArray","join","visibleHeaders","rows"],"sourceRoot":""}