{"version":3,"file":"js/src_views_private_activities_companions_crud_dialogs_CrudDialogProductCustom_vue.js","mappings":"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","sources":["webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogProductCustom.vue","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogProductCustom.vue?55cf","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogProductCustom.vue?82f6","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogProductCustom.vue?c634","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/crud_dialogs/CrudDialogProductCustom.vue?5f85","webpack://@pictaccio/admin-gui/./src/views/private/activities/companions/data_table_columns/custom_product_columns.ts"],"sourcesContent":["<style lang=\"scss\" scoped>\n</style>\n<template>\n    <crud-dialog ref=\"crud-dialog\"\n                 permission=\"product\"\n                 :allowArchiveDelete=\"archiveFeature\"\n                 @close=\"dialogClose\"\n                 @confirm=\"confirmClick\"\n                 @delete=\"deleteClick\">\n        <template v-for=\"field in columns.headers.filter(header => !header['tableOnly'])\"\n                  :key=\"field\"\n                  #[field.name]>\n            <slot :name=\"field.name\"></slot>\n        </template>\n    </crud-dialog>\n</template>\n<script lang=\"ts\">\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nimport { CRUDStatus } from '@pictaccio/admin-gui/core/types/crud_status';\nimport { DataSource, DataSourceOption } from '@pictaccio/admin-gui/core/types/data_source';\nimport { DataSourceEventListeners } from '@pictaccio/admin-gui/core/types/data_source_event_listeners';\nimport { GenericDataSource } from '@pictaccio/admin-gui/datasources/generic_data_source';\nimport { environment } from '@pictaccio/admin-gui/environment';\nimport { CustomProductOptions, DbProductCustomTemplate } from '@pictaccio/admin-gui/models/db_product_custom_template';\nimport CustomProducts from '@pictaccio/admin-gui/store/modules/custom_products';\nimport { globalPrompt } from '@pictaccio/admin-gui/utils/global_prompt';\nimport { globalToast } from '@pictaccio/admin-gui/utils/global_toast';\nimport ActivityCrudDialog\n    from '@pictaccio/admin-gui/views/private/activities/companions/crud_dialogs/activity_crud_dialog';\nimport CrudDialog from '@pictaccio/admin-gui/views/private/activities/companions/CrudDialog.vue';\nimport {\n    CUSTOM_PRODUCT_COLUMNS\n} from '@pictaccio/admin-gui/views/private/activities/companions/data_table_columns/custom_product_columns';\nimport { validateInternalNameCharacters } from '@pictaccio/shared/utils/internal_name_constraint';\nimport { Component, Vue } from 'vue-facing-decorator';\n\n@Component({\n    name: 'CrudDialogProductCustom',\n    components: {\n        FontAwesomeIcon,\n        CrudDialog\n    },\n    emits: [\n        'update'\n    ],\n    expose: [\n        'deleteClick',\n        'openDialog',\n        'refreshField',\n        'updateCrud'\n    ]\n})\nexport default class CrudDialogProductCustom extends ActivityCrudDialog<CustomProducts> {\n    private columns = CUSTOM_PRODUCT_COLUMNS;\n    private crudDialog: CrudDialog<DbProductCustomTemplate>;\n\n    // Feature flags\n    private archiveFeature = environment.features.archiveDeleteProductCustom;\n\n    public async deleteClick(id?: number, row?: DbProductCustomTemplate): Promise<void> {\n        if (!this.archiveFeature) {\n            return;\n        }\n\n        if (this.$validateCapability('product:delete') &&\n            await globalPrompt({\n                buttonType: 'yes-no',\n                icon: ['', ''],\n                message: this.$t('generic.prompt.destructive', {\n                    item: row.internal_name\n                }),\n                title: `${this.$t('generic.ui.delete')} ${this.$t('activities.customProduct.single')}`\n            }) === 'yes') {\n            try {\n                await this.$store.dispatch('CustomProducts/delete', {\n                    filters: [[{\n                        column: 'id',\n                        operand: (id ?? this.editId).toString(),\n                        operator: '=='\n                    }]]\n                });\n                this.$emit('update');\n            } catch (error) {\n                globalToast(this.$t('messages.deleteError'), 'error');\n            }\n        }\n    }\n\n    public getFields(): any {\n        return this.crudDialog.getFields();\n    }\n\n    public openDialog(rowId?: number, row?: DbProductCustomTemplate): void {\n        this.crudDialogStatus = rowId ? 'update' : 'create';\n        this.editId = rowId;\n        this.rowSelected = row;\n        this.crudDialog.setCrudDialogStatus(this.crudDialogStatus);\n        this.crudDialog.openDialog();\n        this.$nextTick(() => {\n            this.updateCrud(rowId, row);\n        });\n    }\n\n    public refreshField(fieldRef: string, dataSource: DataSource<DbProductCustomTemplate, any, any, any>) {\n        (this.$refs['crud-dialog'] as CrudDialog<DbProductCustomTemplate>).refreshField(fieldRef, dataSource);\n    }\n\n    public async updateCrud(rowId?: number, row?: DbProductCustomTemplate): Promise<void> {\n        const options = [{\n            id: 'required',\n            value: true\n        }];\n\n        const internalNameOptions = [\n            {\n                id: 'eventListeners',\n                value: {\n                    blur: event => this.internalNameBlur(event)\n                }\n            }, ...options\n        ];\n\n        this.crudDialog.setRowSelected(row ?? null);\n        this.crudDialog.update({\n            internal_name: GenericDataSource.from<\n                DbProductCustomTemplate,\n                string,\n                string,\n                boolean | DataSourceEventListeners\n            >(rowId ? row['internal_name'] : null, 'internal_name', internalNameOptions),\n            customProductOptions: GenericDataSource.from<\n                DbProductCustomTemplate,\n                CustomProductOptions,\n                string,\n                boolean\n            >(rowId ? row['options'] : null, 'options', options)\n        });\n    }\n\n    /* LIFECYCLE */\n    public async mounted(): Promise<void> {\n        super.mounted('CustomProducts');\n        this.crudDialog = (this.$refs['crud-dialog'] as CrudDialog<DbProductCustomTemplate>);\n        this.crudDialog.setActivity('customProduct');\n        this.crudDialog.setColumns(this.columns);\n    }\n\n    /* EVENT HANDLER */\n    private async confirmClick(): Promise<void> {\n        const formValues = this.getFields();\n        const values: DbProductCustomTemplate = {\n            id: this.editId,\n            internal_name: formValues['internal_name'],\n            options: {\n                choices: Object.entries(formValues)\n                    .filter(([key, value]) => key.startsWith('option-'))\n                    .map(([key, value]) => value.toString()),\n                choices_count: formValues['choices_count']\n            }\n        };\n\n        if (await this.internalNameValidation(values.internal_name)) {\n            return;\n        }\n\n        let result;\n\n        if (this.crudDialogStatus === 'create') {\n            try {\n                result = await this.$store.dispatch('CustomProducts/add', { item: values });\n\n                if (result.createdId !== null) {\n                    this.dialogClose();\n                }\n            } catch (error) {\n                globalToast(this.$t('messages.createError'), 'error');\n            }\n        } else {\n            try {\n                result = await this.$store.dispatch('CustomProducts/update', {\n                    filters: [[{\n                        column: 'id',\n                        operator: '==',\n                        operand: this.editId\n                    }]],\n                    values\n                });\n\n                await this.$store.dispatch('CrudOverlay/removeDirty', { force: true });\n                this.dialogClose();\n            } catch (error) {\n                globalToast(this.$t('messages.saveError'), 'error');\n            }\n        }\n\n        await this.$store.dispatch('CustomProductsReader/customProductsRead', true);\n        this.$emit('update', { id: this.editId ?? result?.createdId });\n    }\n\n    private dialogClose(): void {\n        this.crudDialog.closeDialog();\n        this.crudDialogStatus = 'read';\n        this.editId = null;\n        this.rowSelected = null;\n    }\n\n    /* PRIVATE */\n}\n</script>\n","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, renderList as _renderList, createSlots as _createSlots, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_crud_dialog = _resolveComponent(\"crud-dialog\")!\n\n  return (_openBlock(), _createBlock(_component_crud_dialog, {\n    ref: \"crud-dialog\",\n    permission: \"product\",\n    allowArchiveDelete: _ctx.archiveFeature,\n    onClose: _ctx.dialogClose,\n    onConfirm: _ctx.confirmClick,\n    onDelete: _ctx.deleteClick\n  }, _createSlots({ _: 2 /* DYNAMIC */ }, [\n    _renderList(_ctx.columns.headers.filter(header => !header['tableOnly']), (field) => {\n      return {\n        name: field.name,\n        fn: _withCtx(() => [\n          _renderSlot(_ctx.$slots, field.name)\n        ])\n      }\n    })\n  ]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\"allowArchiveDelete\", \"onClose\", \"onConfirm\", \"onDelete\"]))\n}","import { render } from \"./CrudDialogProductCustom.vue?vue&type=template&id=471e2c3e&ts=true\"\nimport script from \"./CrudDialogProductCustom.vue?vue&type=script&lang=ts\"\nexport * from \"./CrudDialogProductCustom.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__file',\"src/views/private/activities/companions/crud_dialogs/CrudDialogProductCustom.vue\"]])\n/* hot reload */\nif (module.hot) {\n  __exports__.__hmrId = \"471e2c3e\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('471e2c3e', __exports__)) {\n    api.reload('471e2c3e', __exports__)\n  }\n  \n  module.hot.accept(\"./CrudDialogProductCustom.vue?vue&type=template&id=471e2c3e&ts=true\", () => {\n    api.rerender('471e2c3e', render)\n  })\n\n}\n\n\nexport default __exports__","export { default } from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[1]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CrudDialogProductCustom.vue?vue&type=script&lang=ts\"; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[1]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CrudDialogProductCustom.vue?vue&type=script&lang=ts\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[1]!../../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[4]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CrudDialogProductCustom.vue?vue&type=template&id=471e2c3e&ts=true\"","import { i18n } from '@pictaccio/admin-gui/i18n';\n\nexport const CUSTOM_PRODUCT_COLUMNS = {\n    headers: [\n        {\n            name: 'id',\n            componentName: 'Id',\n            locale: 'dataTable.headers.id',\n            size: '6rem',\n            tableOnly: true,\n            order: 1\n        },\n        {\n            name: 'internal_name',\n            componentName: 'TextGeneric',\n            help: 'internalNameHelp',\n            locale: 'dataTable.headers.internalName.customProduct',\n            size: 'minmax(10rem, 2fr)',\n            order: 2\n        },\n        {\n            name: 'customProductOptions',\n            componentName: 'CustomProductOptions',\n            locale: 'dataTable.headers.choices',\n            help: 'customProductOptionsHelp',\n            crudOnly: true,\n            order: 10\n        },\n        {\n            name: 'options',\n            locale: 'dataTable.headers.choices',\n            size: 'minmax(10rem, 2fr)',\n            tableOnly: true,\n            renderer: value => {\n                let content = `\n                        <div style=\"margin-bottom: 0.3rem; float: left;\">\n                            <label style=\"margin: 0; font-size: 1.4rem;\">\n                                ${i18n.global.t('dataTable.headers.choices')}:\n                            </label>\n                            <b>${value.choices_count}</b>\n                        </div>\n                        <div class=\"option-list\">\n                            <label style=\"margin: 0; font-size: 1.4rem;\">\n                                ${i18n.global.t('dataTable.headers.options')}:\n                            </label>\n                    `;\n                value.choices.forEach(element => {\n                    content += `\n                            <div style=\"width: min-content;\n                                        white-space: nowrap;\n                                        --color-item-border: hsla( 89, 42%, 51%, 0.3);\n                                        margin: 0 0 0.5rem 1rem;\n                                        border-bottom: 1px solid var(--color-item-border);\">\n                                ${element}\n                            </div>\n                        `\n                });\n\n                content += `\n                        </div>\n                    `;\n                return content;\n            },\n            order: 10\n        }\n    ],\n    visibleHeaders: [\n        'id',\n        'internal_name',\n        'options'\n    ],\n    rows: []\n}\n"],"names":["FontAwesomeIcon","GenericDataSource","environment","globalPrompt","globalToast","ActivityCrudDialog","CrudDialog","CUSTOM_PRODUCT_COLUMNS","Component","CrudDialogProductCustom","constructor","args","_defineProperty","features","archiveDeleteProductCustom","deleteClick","id","row","archiveFeature","$validateCapability","buttonType","icon","message","$t","item","internal_name","title","$store","dispatch","filters","column","operand","editId","toString","operator","$emit","error","getFields","crudDialog","openDialog","rowId","crudDialogStatus","rowSelected","setCrudDialogStatus","$nextTick","updateCrud","refreshField","fieldRef","dataSource","$refs","options","value","internalNameOptions","blur","event","internalNameBlur","setRowSelected","update","from","customProductOptions","mounted","setActivity","setColumns","columns","confirmClick","formValues","values","choices","Object","entries","filter","key","startsWith","map","choices_count","internalNameValidation","result","createdId","dialogClose","force","closeDialog","__decorate","name","components","emits","expose","renderSlot","_renderSlot","resolveComponent","_resolveComponent","withCtx","_withCtx","renderList","_renderList","createSlots","_createSlots","openBlock","_openBlock","createBlock","_createBlock","render","_ctx","_cache","$props","$setup","$data","$options","_component_crud_dialog","ref","permission","allowArchiveDelete","onClose","onConfirm","onDelete","_","headers","header","field","fn","$slots","i18n","componentName","locale","size","tableOnly","order","help","crudOnly","renderer","content","global","t","forEach","element","visibleHeaders","rows"],"sourceRoot":""}